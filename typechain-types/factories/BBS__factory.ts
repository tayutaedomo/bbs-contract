/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { BBS, BBSInterface } from "../BBS";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Dislike",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Like",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "Post",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parentPostId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "Reply",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "dislike",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestPostId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "like",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "post",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "postOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentPostId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "reply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610aee806100606000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638ee93cf31161005b5780638ee93cf3146100ec5780639b15d04714610108578063d94c783a14610126578063e82935da146101425761007d565b8063618f8bbb14610082578063735f57e41461009e5780638da5cb5b146100ce575b600080fd5b61009c6004803603810190610097919061062d565b61015e565b005b6100b860048036038101906100b3919061062d565b6102a4565b6040516100c5919061069b565b60405180910390f35b6100d66102e3565b6040516100e3919061069b565b60405180910390f35b6101066004803603810190610101919061071b565b610307565b005b61011061036d565b60405161011d9190610777565b60405180910390f35b610140600480360381019061013b9190610792565b610373565b005b61015c6004803603810190610157919061062d565b610420565b005b806001548111156101a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019b9061084f565b60405180910390fd5b60026001826101b3919061089e565b815481106101c4576101c36108d2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361025c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025390610973565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16827fdef1afee738306af15fd73c8062a7a01352f11d582cc09b8d76f305051a8c80660405160405180910390a35050565b600281815481106102b457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61031033610566565b6001819055503373ffffffffffffffffffffffffffffffffffffffff166001547f68b7cf25914f66b018814b06deea130d84de19369d4fe9adbb99fc5fd38cbf2384846040516103619291906109e0565b60405180910390a35050565b60015481565b6001548311156103b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103af90610a50565b60405180910390fd5b6103c133610566565b600181905550823373ffffffffffffffffffffffffffffffffffffffff166001547f14860ab28c6ae50e74a0970b66fb5b475996ae3681ffdadd9c1f8e0702c9f89685856040516104139291906109e0565b60405180910390a4505050565b80600154811115610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d9061084f565b60405180910390fd5b6002600182610475919061089e565b81548110610486576104856108d2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590610973565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16827fda935a3772736202dd12b1bc54cb3460939e447d95d5648c6dbd89836121823a60405160405180910390a35050565b60006001600081548092919061057b90610a70565b91905055506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001549050919050565b600080fd5b600080fd5b6000819050919050565b61060a816105f7565b811461061557600080fd5b50565b60008135905061062781610601565b92915050565b600060208284031215610643576106426105ed565b5b600061065184828501610618565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106858261065a565b9050919050565b6106958161067a565b82525050565b60006020820190506106b0600083018461068c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106db576106da6106b6565b5b8235905067ffffffffffffffff8111156106f8576106f76106bb565b5b602083019150836001820283011115610714576107136106c0565b5b9250929050565b60008060208385031215610732576107316105ed565b5b600083013567ffffffffffffffff8111156107505761074f6105f2565b5b61075c858286016106c5565b92509250509250929050565b610771816105f7565b82525050565b600060208201905061078c6000830184610768565b92915050565b6000806000604084860312156107ab576107aa6105ed565b5b60006107b986828701610618565b935050602084013567ffffffffffffffff8111156107da576107d96105f2565b5b6107e6868287016106c5565b92509250509250925092565b600082825260208201905092915050565b7f506f737420646f6573206e6f7420657869737400000000000000000000000000600082015250565b60006108396013836107f2565b915061084482610803565b602082019050919050565b600060208201905081810360008301526108688161082c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108a9826105f7565b91506108b4836105f7565b92508282039050818111156108cc576108cb61086f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c79206f74686572732063616e20706572666f726d20746869732061637460008201527f696f6e0000000000000000000000000000000000000000000000000000000000602082015250565b600061095d6023836107f2565b915061096882610901565b604082019050919050565b6000602082019050818103600083015261098c81610950565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006109bf83856107f2565b93506109cc838584610993565b6109d5836109a2565b840190509392505050565b600060208201905081810360008301526109fb8184866109b3565b90509392505050565b7f506172656e7420706f737420646f6573206e6f74206578697374000000000000600082015250565b6000610a3a601a836107f2565b9150610a4582610a04565b602082019050919050565b60006020820190508181036000830152610a6981610a2d565b9050919050565b6000610a7b826105f7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aad57610aac61086f565b5b60018201905091905056fea26469706673582212206857af2ba0a1d866970444c14997e9f299c52b5fd7860a4d08b7a2e88c65602764736f6c63430008120033";

type BBSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BBSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BBS__factory extends ContractFactory {
  constructor(...args: BBSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BBS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BBS__factory {
    return super.connect(runner) as BBS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BBSInterface {
    return new Interface(_abi) as BBSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BBS {
    return new Contract(address, _abi, runner) as unknown as BBS;
  }
}
