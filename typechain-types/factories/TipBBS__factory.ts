/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TipBBS, TipBBSInterface } from "../TipBBS";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Disliked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Liked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "Posted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parentPostId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "Replied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Tipped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "dislike",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestPostId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "like",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "likeWithTip",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "post",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "posts",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentPostId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "reply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f11806100206000396000f3fe6080604052600436106100705760003560e01c80638ee93cf31161004e5780638ee93cf3146100f75780639b15d04714610120578063d94c783a1461014b578063e82935da1461017457610070565b80630b1e7f8314610075578063618f8bbb146100b25780637b27bc00146100db575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906109b5565b61019d565b6040516100a99190610a23565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906109b5565b6101db565b005b6100f560048036038101906100f091906109b5565b610338565b005b34801561010357600080fd5b5061011e60048036038101906101199190610aa3565b610585565b005b34801561012c57600080fd5b506101356105eb565b6040516101429190610aff565b60405180910390f35b34801561015757600080fd5b50610172600480360381019061016d9190610b1a565b6105f1565b005b34801561018057600080fd5b5061019b600480360381019061019691906109b5565b61069e565b005b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b80600054811115610221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021890610bd7565b60405180910390fd5b6001600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc90610c69565b60405180910390fd5b6102f082337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6107dc565b3373ffffffffffffffffffffffffffffffffffffffff16827f57c69185b95021475ebf7ba6bea1151e9cd2fa655da73acb8926bff52739e52c60405160405180910390a35050565b8060005481111561037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610bd7565b60405180910390fd5b6001600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041990610c69565b60405180910390fd5b60003411610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045c90610cfb565b60405180910390fd5b610471823360016107dc565b6001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156104ed573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff16827f6790e8ded18c25977540ba89bbcefd83da7fbe624085856758cf343178c4d61260405160405180910390a33373ffffffffffffffffffffffffffffffffffffffff16827f9bb057a11c3457c55cb17f11a38392348805c6ccb84a9b7e8d9c42c694a7882b346040516105799190610aff565b60405180910390a35050565b61058e336108f6565b6000819055503373ffffffffffffffffffffffffffffffffffffffff166000547fc81d15f76f665dc633238bb59b023f7ebc75eb0c90ef79ff741f6bbf03e586e684846040516105df929190610d68565b60405180910390a35050565b60005481565b600054831115610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d90610dd8565b60405180910390fd5b61063f336108f6565b600081905550823373ffffffffffffffffffffffffffffffffffffffff166000547f5d988d5b02d198835c034846353e37d77271a4c6dda3efe7d37ade3a48938a478585604051610691929190610d68565b60405180910390a4505050565b806000548111156106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90610bd7565b60405180910390fd5b6001600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90610c69565b60405180910390fd5b610794823360016107dc565b3373ffffffffffffffffffffffffffffffffffffffff16827f6790e8ded18c25977540ba89bbcefd83da7fbe624085856758cf343178c4d61260405160405180910390a35050565b60006001600085815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b14610882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087990610e44565b60405180910390fd5b806001600085815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550505050565b600080600081548092919061090a90610e93565b9190505550600060016000805481526020019081526020016000209050828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600054915050919050565b600080fd5b600080fd5b6000819050919050565b6109928161097f565b811461099d57600080fd5b50565b6000813590506109af81610989565b92915050565b6000602082840312156109cb576109ca610975565b5b60006109d9848285016109a0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0d826109e2565b9050919050565b610a1d81610a02565b82525050565b6000602082019050610a386000830184610a14565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a6357610a62610a3e565b5b8235905067ffffffffffffffff811115610a8057610a7f610a43565b5b602083019150836001820283011115610a9c57610a9b610a48565b5b9250929050565b60008060208385031215610aba57610ab9610975565b5b600083013567ffffffffffffffff811115610ad857610ad761097a565b5b610ae485828601610a4d565b92509250509250929050565b610af98161097f565b82525050565b6000602082019050610b146000830184610af0565b92915050565b600080600060408486031215610b3357610b32610975565b5b6000610b41868287016109a0565b935050602084013567ffffffffffffffff811115610b6257610b6161097a565b5b610b6e86828701610a4d565b92509250509250925092565b600082825260208201905092915050565b7f506f737420646f6573206e6f7420657869737400000000000000000000000000600082015250565b6000610bc1601383610b7a565b9150610bcc82610b8b565b602082019050919050565b60006020820190508181036000830152610bf081610bb4565b9050919050565b7f4f6e6c79206f74686572732063616e20706572666f726d20746869732061637460008201527f696f6e0000000000000000000000000000000000000000000000000000000000602082015250565b6000610c53602383610b7a565b9150610c5e82610bf7565b604082019050919050565b60006020820190508181036000830152610c8281610c46565b9050919050565b7f4d7573742073656e6420457468657220746f206c696b65206120706f7374207760008201527f6974682061207469700000000000000000000000000000000000000000000000602082015250565b6000610ce5602983610b7a565b9150610cf082610c89565b604082019050919050565b60006020820190508181036000830152610d1481610cd8565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610d478385610b7a565b9350610d54838584610d1b565b610d5d83610d2a565b840190509392505050565b60006020820190508181036000830152610d83818486610d3b565b90509392505050565b7f506172656e7420706f737420646f6573206e6f74206578697374000000000000600082015250565b6000610dc2601a83610b7a565b9150610dcd82610d8c565b602082019050919050565b60006020820190508181036000830152610df181610db5565b9050919050565b7f4c696b6520737461746520697320616c72656164792073657400000000000000600082015250565b6000610e2e601983610b7a565b9150610e3982610df8565b602082019050919050565b60006020820190508181036000830152610e5d81610e21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e9e8261097f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ed057610ecf610e64565b5b60018201905091905056fea2646970667358221220b029c97033a0346136666d592a63faab20ba4335e5eddba84765e972833637db64736f6c63430008120033";

type TipBBSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TipBBSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TipBBS__factory extends ContractFactory {
  constructor(...args: TipBBSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TipBBS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TipBBS__factory {
    return super.connect(runner) as TipBBS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TipBBSInterface {
    return new Interface(_abi) as TipBBSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TipBBS {
    return new Contract(address, _abi, runner) as unknown as TipBBS;
  }
}
